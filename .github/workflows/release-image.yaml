name: "Release Image"

on:
  push:
    branches: [ "main" ]

jobs:
  build-docker:
    name: "Build & Release Docker Image"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - arch: amd64
            tag: amd64
            dotnet_arch: linux-x64
          - arch: arm64
            tag: arm64
            dotnet_arch: linux-arm64
    steps:
      # Setup Environment
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.x
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3
      # Build app locally
      - name: Restore dependencies
        run: dotnet restore -r ${{ matrix.platform.dotnet_arch }} src/DinoClipper.sln
      - name: Build
        run: dotnet build --no-restore -c Release -r ${{ matrix.platform.dotnet_arch }} src/DinoClipper/DinoClipper.csproj
      - name: Publish Build
        run: dotnet publish --no-restore -c Release -o ./out -r ${{ matrix.platform.dotnet_arch }} src/DinoClipper/DinoClipper.csproj
      - name: Generate a build timestamp
        run: echo $(date +%Y.%m.%d-%H.%M.%S),${{ matrix.platform.dotnet_arch }} > ./out/build-timestamp.txt
      # Build Image
      - name: Build and push branch image (${{ github.ref_name }}-${{ matrix.platform.tag }})
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/DinoClipper/Dockerfile
          push: true
          platforms: linux/${{ matrix.platform.arch }}
          tags: |
            ghcr.io/rgunti/dinoclipper:${{ github.ref_name }}-${{ matrix.platform.tag }}
            ghcr.io/rgunti/dinoclipper:${{ github.ref_name }}
            ghcr.io/rgunti/dinoclipper:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
